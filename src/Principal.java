/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Principal.java
 *
 * Created on 18/06/2009, 13:26:28
 */
package escalonadores;

import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Luiz
 */
public class Principal extends javax.swing.JFrame {

    /** Creates new form Principal */
    Escalonador escalonador;
    String id;

    public Principal() {
        initComponents();
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        //escalonador.executarAlgoritmo();
        id = "0";
    }

    public void criaEscalonador(int índice)
    {
        // 0 -> FIFO, 1-> RR, 2-> SJF, 3-> MFQ
        switch(índice){
            case 0 : zeraId();escalonador = new Fifo(this.lProcessos, this.tProcessador); break;
            case 1 : {
                        zeraId();
                        System.out.println("Algoritmo Round Robin");
                        escalonador = new RoundRobin(this.lProcessos, this.tProcessador);
                        System.out.println(escalonador.getFatiaDeTempo());
                        break;
                     }
            case 2 : zeraId(); escalonador = new SJF(this.lProcessos, this.tProcessador); break;
            case 3 : zeraId(); escalonador = new Prioridades(this.lProcessos, this.tProcessador); break;
            case 4 : {
                        zeraId();
                        escalonador = new MultiplasFilas(this.lProcessos, this.tProcessador);


                        int int1 = Integer.parseInt(JOptionPane.showInputDialog("Insira o valor da fatia de tempo da Fila 1"));
                        int int2 = Integer.parseInt(JOptionPane.showInputDialog("Insira o valor da fatia de tempo da Fila 2"));

                        escalonador.setTempoFila1(int1);
                        escalonador.setTempoFila2(int2);
                        break;
                     }

        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lProcessos = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        tProcessador = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        lAlgoritmos = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tFatiaTempo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        bControle = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        bCriarProcesso = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cPrioridade = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        tTempo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tId = new javax.swing.JTextField();
        bAjudaPrioridade = new javax.swing.JButton();
        bAjudaTempo = new javax.swing.JButton();
        bAjudaID = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cFila = new javax.swing.JComboBox();
        bAjudaFila = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        bAjudaFatiaTempo = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        bOkFatiaTempo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Escalonator");

        jScrollPane1.setViewportView(lProcessos);

        tProcessador.setColumns(3);
        tProcessador.setEditable(false);
        tProcessador.setRows(3);
        tProcessador.setAutoscrolls(false);
        jScrollPane2.setViewportView(tProcessador);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lAlgoritmos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "First In First Out", "Round Robin", "Shortest Job First", "Prioridades", "Múltiplas Filas" }));
        lAlgoritmos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lAlgoritmosActionPerformed(evt);
            }
        });

        jLabel1.setText("Algoritmo de escalonamento:");

        jLabel2.setText("Fatia de tempo (ms):");

        tFatiaTempo.setText("100");
        tFatiaTempo.setEnabled(false);

        jLabel3.setText("Prontos:");

        jLabel4.setText("Processador:");

        bControle.setText("Iniciar");
        bControle.setEnabled(false);
        bControle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bControleActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Novo Processo")));

        bCriarProcesso.setText("Criar ");
        bCriarProcesso.setEnabled(false);
        bCriarProcesso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCriarProcessoActionPerformed(evt);
            }
        });

        jLabel6.setText("Prioridade:");

        cPrioridade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", " " }));
        cPrioridade.setEnabled(false);

        jLabel7.setText("Tempo (ms): ");

        tTempo.setText("1000");
        tTempo.setEnabled(false);
        tTempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tTempoActionPerformed(evt);
            }
        });

        jLabel8.setText("ID:");

        tId.setEditable(false);
        tId.setText("0");

        bAjudaPrioridade.setText("?");
        bAjudaPrioridade.setEnabled(false);
        bAjudaPrioridade.setMargin(new java.awt.Insets(1, 1, 1, 1));
        bAjudaPrioridade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAjudaPrioridadeActionPerformed(evt);
            }
        });

        bAjudaTempo.setText("?");
        bAjudaTempo.setEnabled(false);
        bAjudaTempo.setMargin(new java.awt.Insets(1, 1, 1, 1));
        bAjudaTempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAjudaTempoActionPerformed(evt);
            }
        });

        bAjudaID.setText("?");
        bAjudaID.setEnabled(false);
        bAjudaID.setMargin(new java.awt.Insets(1, 1, 1, 1));
        bAjudaID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAjudaIDActionPerformed(evt);
            }
        });

        jLabel5.setText("Fila:");

        cFila.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Fila 1 (MF)", "Fila 2 (MF)", "Fila 3 (FIFO)" }));
        cFila.setEnabled(false);

        bAjudaFila.setText("?");
        bAjudaFila.setEnabled(false);
        bAjudaFila.setMargin(new java.awt.Insets(1, 1, 1, 1));
        bAjudaFila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAjudaFilaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(bCriarProcesso))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel8)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cPrioridade, javax.swing.GroupLayout.Alignment.TRAILING, 0, 76, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(tId)
                        .addComponent(cFila, 0, 76, Short.MAX_VALUE))
                    .addComponent(tTempo, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bAjudaID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bAjudaPrioridade, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bAjudaFila, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bAjudaTempo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bAjudaID))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cFila, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(bAjudaFila))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cPrioridade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(bAjudaPrioridade))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tTempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(bAjudaTempo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bCriarProcesso))
        );

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Informações"));

        jTextArea2.setColumns(20);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setText("FIFO (acrônimo para First In, First Out, que em por-tuguês significa primeiro a entrar, primeiro a sair)refere-se a estruturas de dados do tipo fila.");
        jScrollPane3.setViewportView(jTextArea2);

        jTabbedPane1.addTab("FIFO", jScrollPane3);

        jTextArea3.setColumns(20);
        jTextArea3.setLineWrap(true);
        jTextArea3.setRows(5);
        jTextArea3.setText("O escalonamento circular (round robin scheduling) é um escalonamento\nprojetado especialmente para sistemas de tempo compartilhado. Esse\nalgoritmo é bastante semelhante ao FIFO, porém, quando um processo\npassa para o estado de execução, existe um tempo limite para o uso\ncontínuo do processador denominado fatia de tempo (time-slice) ou\nquantum.");
        jScrollPane4.setViewportView(jTextArea3);

        jTabbedPane1.addTab("Round Robin", jScrollPane4);

        jTextArea4.setColumns(20);
        jTextArea4.setLineWrap(true);
        jTextArea4.setRows(5);
        jTextArea4.setText("Este algoritmo seleciona o processo que tiver o menor tempo de processador ainda por executar.\nO SJF (Shortest Job First – Menor Job Primeiro) é uma variante do escalonamento FIFO onde os processos em espera pelo processador são organizados em um fila segundo seu tempo de serviço (ts), sendo colocados à frente os menores jobs, isto é, os que serão processados em intervalos de tempo menores.");
        jScrollPane5.setViewportView(jTextArea4);

        jTabbedPane1.addTab("SJF", jScrollPane5);

        jTextArea5.setColumns(20);
        jTextArea5.setLineWrap(true);
        jTextArea5.setRows(5);
        jTextArea5.setText("É um escalonamento do tipo preemptivo realizado com base em um valor\nassociado a cada processo denominado prioridade de execução. O\nprocesso com maior prioridade no estado de pronto é sempre o escolhido\npara execução, e processos com valores iguais são escalonados seguindo o\ncritério de FIFO. Neste escalonamento, o conceito de fatia de tempo não\nexiste, consequentemente, um processo em execução não pode sofrer\npreempção por tempo.");
        jTextArea5.setWrapStyleWord(true);
        jScrollPane6.setViewportView(jTextArea5);

        jTabbedPane1.addTab("Prioridades", jScrollPane6);

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Múltiplas Filas é um tipo de algoritmo de escalonamento, no qual são usadas filas de processos. Cada fila tem um determinado nível de prioridade. As filas possuem uma fatia de tempo, diferente da fatia de tempo dos processos. Se esta fatia não for suficiente para executar todos os processos, estes são movidos para a próxima fila.");
        jTextArea1.setWrapStyleWord(true);
        jScrollPane7.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Múltiplas Filas", jPanel2);

        bAjudaFatiaTempo.setText("?");
        bAjudaFatiaTempo.setEnabled(false);
        bAjudaFatiaTempo.setMargin(new java.awt.Insets(1, 1, 1, 1));
        bAjudaFatiaTempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAjudaFatiaTempoActionPerformed(evt);
            }
        });

        jButton1.setText("OK");
        jButton1.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        bOkFatiaTempo.setText("OK");
        bOkFatiaTempo.setEnabled(false);
        bOkFatiaTempo.setMargin(new java.awt.Insets(2, 2, 2, 2));
        bOkFatiaTempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOkFatiaTempoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tFatiaTempo, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lAlgoritmos, javax.swing.GroupLayout.Alignment.TRAILING, 0, 0, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bOkFatiaTempo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bAjudaFatiaTempo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(bControle)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 3, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lAlgoritmos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tFatiaTempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bOkFatiaTempo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bAjudaFatiaTempo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                                .addComponent(bControle)
                                .addGap(16, 16, 16))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lAlgoritmosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lAlgoritmosActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_lAlgoritmosActionPerformed

    private void zeraId()
    {
        id = "0";
        tId.setText("0");
    }

    private void bCriarProcessoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCriarProcessoActionPerformed
        // TODO add your handling code here:
        if(lAlgoritmos.getSelectedIndex() == 4)
        {
            Processo novo = new Processo(id + "(" + (cFila.getSelectedIndex()+1) +")", cPrioridade.getSelectedIndex(), cFila.getSelectedIndex()+1, Integer.parseInt(tTempo.getText()));
            escalonador.novoProcesso(novo);
            id = (Integer.parseInt(id) + 1) + "";
            tId.setText(id + "");
        }
        else
        {
            Processo novo = new Processo(id, cPrioridade.getSelectedIndex(), cFila.getSelectedIndex()+1, Integer.parseInt(tTempo.getText()));
            escalonador.novoProcesso(novo);
            id = (Integer.parseInt(id) + 1) + "";
            tId.setText(id + "");
        }

}//GEN-LAST:event_bCriarProcessoActionPerformed

    private void bControleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bControleActionPerformed
        // TODO add your handling code here:
    
        Thread p;
            p = new Atualizador("algoritmo");
            p.start();
            //System.out.println("Gerou 1 thread");
}//GEN-LAST:event_bControleActionPerformed

    private void bAjudaPrioridadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAjudaPrioridadeActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Quanto menor o número, maior será a prioridade do processo.\n'0' indica um processo de alta prioridade, enquanto \n'9' indica um processo de baixa prioridade");
}//GEN-LAST:event_bAjudaPrioridadeActionPerformed

    private void bAjudaTempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAjudaTempoActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Quantidade de tempo no processador que será necessária para o processo ser executado completamente.\nEste tempo deve ser inserido em milissegundos.\nExemplo: '1000' para um segundo, '2500' para dois segundos e meio, etc.");
}//GEN-LAST:event_bAjudaTempoActionPerformed

    private void tTempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tTempoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tTempoActionPerformed

    private void bAjudaIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAjudaIDActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "ID do proceso. Este ID é configurado automaticamente");
}//GEN-LAST:event_bAjudaIDActionPerformed

    private void bAjudaFatiaTempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAjudaFatiaTempoActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Fatia de tempo é o período de tempo que um processo tem para executar no processador em um sistema preemptivo multi-tarefa.\n" +
                                            "Toda vez que um processo é escalonado para execução uma nova fatia de tempo é concedida.\n" +
                                            "Caso a fatia de tempo expire, o SO interrompe o processo em execução, salva seu contexto e direciona-o para o final da fila de pronto.\n\n" +
                                            "O valor da fatia de tempo deve ser inserido em milissegundos. Se nenhum valor for inserido o valor 100 será utilizado");
}//GEN-LAST:event_bAjudaFatiaTempoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        criaEscalonador(lAlgoritmos.getSelectedIndex());

        switch(lAlgoritmos.getSelectedIndex()){
            case 0:
            {
                cPrioridade.setEnabled(false);
                cFila.setEnabled(false);
                tTempo.setEnabled(true);
                bAjudaID.setEnabled(true);
                bAjudaPrioridade.setEnabled(false);
                bAjudaTempo.setEnabled(true);
                bCriarProcesso.setEnabled(true);
                tFatiaTempo.setEnabled(false);
                bOkFatiaTempo.setEnabled(false);
                bAjudaFatiaTempo.setEnabled(false);
                bControle.setEnabled(true);
                break;
            }

            case 1:
            {
                cPrioridade.setEnabled(false);
                cFila.setEnabled(false);
                tTempo.setEnabled(true);
                bAjudaID.setEnabled(true);
                bAjudaPrioridade.setEnabled(false);
                bAjudaTempo.setEnabled(true);
                bCriarProcesso.setEnabled(true);
                tFatiaTempo.setEnabled(true);
                bOkFatiaTempo.setEnabled(true);
                bAjudaFatiaTempo.setEnabled(true);
                bControle.setEnabled(true);
                break;
            }

            case 2:
            {
                cPrioridade.setEnabled(false);
                cFila.setEnabled(false);
                tTempo.setEnabled(true);
                bAjudaID.setEnabled(true);
                bAjudaPrioridade.setEnabled(false);
                bAjudaTempo.setEnabled(true);
                bCriarProcesso.setEnabled(true);
                tFatiaTempo.setEnabled(false);
                bOkFatiaTempo.setEnabled(false);
                bAjudaFatiaTempo.setEnabled(false);
                bControle.setEnabled(true);
                break;
            }

            case 3:
            {
                cPrioridade.setEnabled(true);
                cFila.setEnabled(false);
                tTempo.setEnabled(true);
                bAjudaID.setEnabled(true);
                bAjudaPrioridade.setEnabled(true);
                bAjudaTempo.setEnabled(true);
                bCriarProcesso.setEnabled(true);
                tFatiaTempo.setEnabled(false);
                bOkFatiaTempo.setEnabled(false);
                bAjudaFatiaTempo.setEnabled(false);
                bControle.setEnabled(true);
                break;
            }

            case 4:
            {
                cPrioridade.setEnabled(false);
                cFila.setEnabled(true);
                tTempo.setEnabled(true);
                bAjudaID.setEnabled(true);
                bAjudaFila.setEnabled(true);
                bAjudaPrioridade.setEnabled(false);
                bAjudaTempo.setEnabled(true);
                bCriarProcesso.setEnabled(true);
                tFatiaTempo.setEnabled(false);
                bOkFatiaTempo.setEnabled(true);
                bAjudaFatiaTempo.setEnabled(true);
                bControle.setEnabled(true);
                break;
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void bOkFatiaTempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOkFatiaTempoActionPerformed
        // TODO add your handling code here:
        escalonador.setFatiaDeTempo(Integer.parseInt(tFatiaTempo.getText()));
    }//GEN-LAST:event_bOkFatiaTempoActionPerformed

    private void bAjudaFilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAjudaFilaActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Botão Ajuda Filas");
    }//GEN-LAST:event_bAjudaFilaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Principal().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAjudaFatiaTempo;
    private javax.swing.JButton bAjudaFila;
    private javax.swing.JButton bAjudaID;
    private javax.swing.JButton bAjudaPrioridade;
    private javax.swing.JButton bAjudaTempo;
    private javax.swing.JToggleButton bControle;
    private javax.swing.JButton bCriarProcesso;
    private javax.swing.JButton bOkFatiaTempo;
    private javax.swing.JComboBox cFila;
    private javax.swing.JComboBox cPrioridade;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JComboBox lAlgoritmos;
    private javax.swing.JList lProcessos;
    private javax.swing.JTextField tFatiaTempo;
    private javax.swing.JTextField tId;
    private javax.swing.JTextArea tProcessador;
    private javax.swing.JTextField tTempo;
    // End of variables declaration//GEN-END:variables

    private class Atualizador extends Thread {

        public Atualizador(String s) {
            super(s);
        }

        @Override
        public void run() {
            if (getName().equals("algoritmo")) {
                System.out.println("entrou na thread do algoritmo");
                if (!bControle.isSelected()) {
                    System.out.println("Parou");
                    bControle.setText("Iniciar");
                    escalonador.executar = false;
                } else {
                    System.out.println("Iniciou");
                    bControle.setText("Parar");
                    escalonador.executar = true;
                    escalonador.run();
                }
            }
        }//fim do método run


    }//fim da classe privada thread
}